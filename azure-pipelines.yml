trigger:
- main  # Adjust to your branch name

pool:
  name: 'azuredevopspool'  # Self-hosted agent

variables:
  backendStorageAccount: 'yashstorage98764567'
  backendContainer: 'terraformstate'
  backendResourceGroup: 'NetworkWatcherRG'

stages:
- stage: Terraform_Install
  displayName: "Install Terraform"
  jobs:
  - job: Install
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

- stage: Terraform_Init
  displayName: "Initialize Terraform"
  jobs:
  - job: Init
    steps:
    - task: TerraformCLI@2
      inputs:
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'azureterraform'  # Make sure this service connection exists
        backendAzureRmResourceGroupName: '$(backendResourceGroup)'
        backendAzureRmStorageAccountName: '$(backendStorageAccount)'
        backendAzureRmContainerName: '$(backendContainer)'
        backendAzureRmKey: 'terraform.tfstate'

- stage: Terraform_Fmt
  displayName: "Format Terraform Code"
  jobs:
  - job: Fmt
    steps:
    - task: TerraformCLI@2
      inputs:
        command: 'fmt'

- stage: Terraform_Validate
  displayName: "Validate Terraform Configuration"
  jobs:
  - job: Validate
    steps:
    - task: TerraformCLI@2
      inputs:
        command: 'validate'

- stage: Terraform_Plan
  displayName: "Terraform Plan"
  jobs:
  - job: Plan
    steps:
    - task: TerraformCLI@2
      inputs:
        command: 'plan'

- stage: Terraform_Apply
  displayName: "Terraform Apply"
  jobs:
  - job: Apply
    steps:
    - task: TerraformCLI@2
      inputs:
        command: 'apply'
        commandOptions: '-auto-approve'
