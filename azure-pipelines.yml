trigger:
- main

pool:
  name: 'Azuredevopspool'  # Ensure this is your self-hosted Windows agent pool

steps:
- powershell: |
    if (Test-Path -Path "C:\Terraform") {
        Remove-Item -Recurse -Force -Path "C:\Terraform"
    }
    New-Item -ItemType Directory -Path "C:\Terraform"
    Invoke-WebRequest -Uri "https://releases.hashicorp.com/terraform/1.1.0/terraform_1.1.0_windows_amd64.zip" -OutFile "terraform.zip"
    Expand-Archive -Path "terraform.zip" -DestinationPath "C:\Terraform"
    $env:PATH += ";C:\Terraform"
    [System.Environment]::SetEnvironmentVariable("PATH", $env:PATH, [System.EnvironmentVariableTarget]::Machine)
  displayName: 'Install Terraform'

- powershell: |
    $env:PATH += ";C:\Terraform"
    terraform --version
  displayName: 'Verify Terraform Version'

- task: AzureCLI@2
  displayName: 'Terraform Init'
  inputs:
    azureSubscription: 'Free Trial(b3c9519c-431e-4755-a70a-e44b4a68c99c)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: 'terraform init'
    useGlobalConfig: true

- powershell: |
    terraform fmt -check -diff
  displayName: 'Terraform Format Check'

- powershell: |
    terraform validate
  displayName: 'Terraform Validate'

- task: AzureCLI@2
  displayName: 'Terraform Plan'
  inputs:
    azureSubscription: 'azureterraform'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform plan -out=tfplan

- task: AzureCLI@2
  displayName: 'Terraform Apply'
  inputs:
    azureSubscription: 'azureterraform'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform apply -auto-approve tfplan
