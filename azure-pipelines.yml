trigger:
  - main  # Runs when code is pushed to the main branch

pool:
  name: 'Azuredevopspool'  # Use your self-hosted agent pool

stages:
  - stage: DeployInfra
    displayName: "Deploy Azure Infrastructure"
    jobs:
      - job: Terraform_Deployment
        displayName: "Terraform Deployment"
        steps:
        
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: 'latest'

          - task: TerraformCLI@2
            displayName: "Terraform Init"
            inputs:
              command: 'init'
              backendType: 'azurerm'
              backendServiceArm: 'testconnection'
              backendAzureRmTenantId: 'b2a9a866-373b-445f-b6fc-abb14327f9dd'
              backendAzureRmSubscriptionId: 'b3c9519c-431e-4755-a70a-e44b4a68c99c'
              backendAzureRmResourceGroupName: 'NetworkWatcherRG'
              backendAzureRmStorageAccountName: 'yashstorage987654321'
              backendAzureRmContainerName: 'yashbackendcontainer7654'
              backendAzureRmKey: 'terraform.tfstate'
              allowTelemetryCollection: true

          - task: TerraformCLI@2
            displayName: "Terraform Plan"
            inputs:
              command: 'plan'
              backendServiceArm: 'testconnection'

          - task: TerraformCLI@2
            displayName: "Terraform Apply"
            inputs:
              command: 'apply'
              backendServiceArm: 'testconnection'
              commandOptions: '-auto-approve'  # Automatically approve changes